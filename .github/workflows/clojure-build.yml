name: Clojure CI

on:
  push:
    branches:
      - main

jobs:
  clojure:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          path: ./your-repo-name

      - name: Prepare java
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: "zulu"

      - name: Install Clojure CLI on macOS
        run: |
          brew install clojure/tools/clojure
        if: runner.os == 'macOS'

      - name: Install Clojure CLI on Linux
        run: |
          curl -O https://download.clojure.org/install/linux-install-1.10.1.536.sh
          chmod +x linux-install-1.10.1.536.sh
          sudo ./linux-install-1.10.1.536.sh
        if: runner.os == 'ubuntu-latest'

      - name: Install Leiningen
        run: |
          mkdir -p $HOME/bin
          curl -o $HOME/bin/lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
          chmod +x $HOME/bin/lein

      - name: Install Boot
        run: |
          mkdir -p $HOME/bin
          curl -L https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh -o $HOME/bin/boot
          chmod +x $HOME/bin/boot

      - name: Install Babashka
        run: |
          curl -o bb -L https://github.com/babashka/babashka/releases/download/v0.7.8/babashka-0.7.8
          chmod +x bb
          sudo mv bb /usr/local/bin

      - name: Cache clojure dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.edn
          key: cljdeps-${{ runner.os }}-${{ hashFiles('**/deps.edn') }}
          restore-keys: cljdeps-${{ runner.os }}-

      - name: Execute Clojure code
        run: clojure -e "(+ 1 1)"
        if: runner.os == 'ubuntu-latest' # Adjust this condition as needed

      - name: Get Leiningen version
        run: lein -v

      - name: Get Boot version
        run: boot -V

      - name: Get Babashka version
        run: bb --version

      - name: Get clj-kondo version
        run: clj-kondo --version

      - name: Get cljfmt version
        run: cljfmt --version

      - name: Get cljstyle version
        # Skip cljstyle on Windows
        if: runner.os != 'windows-latest'
        run: cljstyle version

      - name: Get zprint version
        run: zprint --version
